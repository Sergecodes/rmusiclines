# Generated by Django 3.2.9 on 2022-02-26 05:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('accounts', '0011_auto_20220212_0825'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('user', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='type', serialize=False, to='accounts.user')),
                ('is_mod', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_premium', models.BooleanField(default=False)),
                ('is_site_agent', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'accounts"."user_type',
            },
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='user_is_mod_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='user_is_verified_idx',
        ),
        migrations.RemoveIndex(
            model_name='user',
            name='user_is_premium_idx',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_mod',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_premium',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_verified',
        ),
        migrations.AlterField(
            model_name='user',
            name='gender',
            field=models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('N/B', 'Non-binary')], default='M', max_length=3),
        ),
        migrations.AlterField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='users', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AlterField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='users', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='usertype',
            index=models.Index(fields=['is_mod'], name='user_type_is_mod_idx'),
        ),
        migrations.AddIndex(
            model_name='usertype',
            index=models.Index(fields=['is_verified'], name='user_type_is_verified_idx'),
        ),
        migrations.AddIndex(
            model_name='usertype',
            index=models.Index(fields=['is_premium'], name='user_type_is_premium_idx'),
        ),
    ]
