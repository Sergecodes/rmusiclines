# Generated by Django 3.2.9 on 2021-12-27 16:56

from django.db import migrations, models
import django.db.models.deletion
import shortuuid.django_fields


class Migration(migrations.Migration):

    dependencies = [
        ('posts', '0004_auto_20211227_0516'),
    ]

    operations = [
        migrations.AddField(
            model_name='artistpost',
            name='has_been_edited',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='artistpost',
            name='is_private',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='artistpost',
            name='updated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='artistpostcomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', related_query_name='reply', to='posts.artistpostcomment'),
        ),
        migrations.AddField(
            model_name='artistpostcomment',
            name='updated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='artistpostcomment',
            name='uuid',
            field=shortuuid.django_fields.ShortUUIDField(alphabet=None, length=16, max_length=24, prefix='', unique=True),
        ),
        migrations.AddField(
            model_name='nonartistpost',
            name='has_been_edited',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='nonartistpost',
            name='is_private',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='nonartistpost',
            name='updated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='nonartistpostcomment',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', related_query_name='reply', to='posts.nonartistpostcomment'),
        ),
        migrations.AddField(
            model_name='nonartistpostcomment',
            name='updated_on',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='nonartistpostcomment',
            name='uuid',
            field=shortuuid.django_fields.ShortUUIDField(alphabet=None, length=16, max_length=24, prefix='', unique=True),
        ),
        migrations.AlterField(
            model_name='artistpost',
            name='body',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='artistpost',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='artistpost',
            name='uuid',
            field=shortuuid.django_fields.ShortUUIDField(alphabet=None, length=20, max_length=24, prefix='', unique=True),
        ),
        migrations.AlterField(
            model_name='nonartistpost',
            name='body',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='nonartistpost',
            name='created_on',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='nonartistpost',
            name='uuid',
            field=shortuuid.django_fields.ShortUUIDField(alphabet=None, length=20, max_length=24, prefix='', unique=True),
        ),
        migrations.AlterField(
            model_name='posthashtag',
            name='slug',
            field=models.SlugField(max_length=40, unique=True, verbose_name='slug'),
        ),
        migrations.AlterField(
            model_name='posthashtag',
            name='topic',
            field=models.CharField(max_length=40, unique=True, verbose_name='topic'),
        ),
        migrations.AddConstraint(
            model_name='posthashtag',
            constraint=models.CheckConstraint(check=models.Q(('topic__regex', '^[a-zA-ZÀ-Ÿ0-9]+$'), _negated=True), name='hashtag_is_alphanumeric'),
        ),
    ]
