# Generated by Django 3.2.9 on 2022-02-09 10:44

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('posts', '0005_auto_20220206_0105'),
    ]

    operations = [
        migrations.AlterField(
            model_name='artistpost',
            name='hashtags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='posts.HashtaggedArtistPost', to='posts.PostHashtag', verbose_name='Hashtags'),
        ),
        migrations.AlterField(
            model_name='hashtaggedartistpost',
            name='content_object',
            field=models.ForeignKey(db_column='artist_post_id', on_delete=django.db.models.deletion.CASCADE, related_name='hashtagged_hashtags', related_query_name='hashtagged_hashtag', to='posts.artistpost'),
        ),
        migrations.AlterField(
            model_name='hashtaggedartistpost',
            name='tag',
            field=models.ForeignKey(db_column='post_hashtag_id', on_delete=django.db.models.deletion.CASCADE, related_name='hashtagged_artist_posts', related_query_name='hashtagged_artist_post', to='posts.posthashtag'),
        ),
        migrations.AlterField(
            model_name='hashtaggednonartistpost',
            name='content_object',
            field=models.ForeignKey(db_column='non_artist_post_id', on_delete=django.db.models.deletion.CASCADE, related_name='hashtagged_hashtags', related_query_name='hashtagged_hashtag', to='posts.nonartistpost'),
        ),
        migrations.AlterField(
            model_name='hashtaggednonartistpost',
            name='tag',
            field=models.ForeignKey(db_column='post_hashtag_id', on_delete=django.db.models.deletion.CASCADE, related_name='hashtagged_non_artist_posts', related_query_name='hashtagged_non_artist_post', to='posts.posthashtag'),
        ),
        migrations.AlterField(
            model_name='nonartistpost',
            name='hashtags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='posts.HashtaggedNonArtistPost', to='posts.PostHashtag', verbose_name='Hashtags'),
        ),
    ]
